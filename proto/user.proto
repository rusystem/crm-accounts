syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "../gen/proto/user";

service UserService {
  rpc GetById(UserId) returns(User);
  rpc Create(User) returns(UserId);
  rpc Update(User) returns(google.protobuf.Empty);
  rpc Delete(UserId) returns(google.protobuf.Empty);
  rpc GetListByCompanyId(UserId) returns(UserList);
}

message User {
  int64 id = 1;                                                   // Уникальный идентификатор пользователя
  int64 company_id = 2;                                            // Уникальный идентификатор компании
  string username = 3;
  string name = 4;                                                // Имя пользователя, уникальное
  string email = 5;                                                // Электронная почта пользователя, уникальная
  string phone = 6;                                                // Телефон пользователя
  string password_hash = 7;                                        // Хеш пароля пользователя
  google.protobuf.Timestamp created_at = 8;                        // Дата и время создания учетной записи
  google.protobuf.Timestamp updated_at = 9;                        // Дата и время последнего обновления учетной записи
  google.protobuf.Timestamp last_login = 10;                        // Дата и время последнего входа (используем обертку для возможности null)
  bool is_active = 11;                                             // Статус активности учетной записи
  string role = 12;                                                // Роль пользователя (например, 'user', 'admin')
  string language = 13;                                            // Язык пользователя
  string country = 14;                                             // Страна пользователя
  bool is_approved = 15;                                           // Подтвержден ли пользователь
  bool is_send_system_notification = 16;                           // Отправлять ли пользователю уведомления
  repeated string sections = 17;                                   // Секции пользователя
  string position = 18;                                            // Должность пользователя
}

message UserId {
  int64 Id = 1;
}

message UserList {
  repeated User users = 1;
}